version: "3.3"

services:
  transmission:
    image: haugene/transmission-openvpn
    container_name: transmission
    volumes:
      - /media/docker/transmission/:/data
      - /media/docker/transmission-config:/config
      - ./ovpn:/etc/openvpn/custom/
    environment:
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
        #- OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=${TRANSMISSION_RPC_AUTHENTICATION_REQUIRED}
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
      - TRANSMISSION_UMASK=022
      - PUID=${TORRENT_PUID}
      - PGID=${TORRENT_PGID}
    sysctls:
      # must enable ipv6 to have airvpn work
      - net.ipv6.conf.all.disable_ipv6=0
    cap_add:
      - NET_ADMIN
    logging:
      driver: json-file
      options:
        max-size: 10m
    restart: unless-stopped
    ports:
      - "51413:51413"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
    networks:
      - traefik_proxy

  jellyfin:
    image: ghcr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${TORRENT_PUID}
      - PGID=${TORRENT_PGID}
      - TZ=${TZ}
    volumes:
      - /media/docker/jellyfin:/config
      - /media/docker/storage:/data
      - /dev/shm:/config/data/transcoding-temp/transcodes
      - /media/docker/transmission/completed:/transmission
    network_mode: service:transmission # VPN
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    restart: unless-stopped
    depends_on:
      - transmission

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - transmission
    environment:
      - PUID=${TORRENT_PUID}
      - PGID=${TORRENT_PGID}
      - TZ=${TZ}
    network_mode: service:transmission # VPN
    restart: unless-stopped
    volumes:
      - /media/docker/sonarr:/config
      - /media/docker/transmission/completed:/data/completed
      - /media/docker/storage/tvshows:/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    depends_on:
      - transmission
    environment:
      - PUID=${TORRENT_PUID}
      - PGID=${TORRENT_PGID}
      - TZ=${TZ}
    network_mode: service:transmission # VPN
    restart: unless-stopped
    volumes:
      - /media/docker/radarr:/config
      - /media/docker/transmission/completed:/data/completed
      - /media/docker/storage/movies:/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    depends_on:
      - transmission
    environment:
      - PUID=${TORRENT_PUID}
      - PGID=${TORRENT_PGID}
      - TZ=${TZ}
    network_mode: service:transmission # VPN
    restart: unless-stopped
    volumes:
      - /media/docker/jackett:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"

  nginx:
    image: nginx
    container_name: nginx
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - /media/docker/storage:/usr/share/nginx/html/videos:ro
      - /media/docker/transmission/completed:/usr/share/nginx/html/torrent:ro
      - ./templates:/etc/nginx/templates
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`torrent.$DOMAIN`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx.middlewares=nginx-auth@docker"
      - "traefik.http.middlewares.nginx-auth.basicauth.users=${NGINX_BASIC_AUTH}"

networks:
  traefik_proxy:
    external: true
